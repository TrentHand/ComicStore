{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"reg",
				"register_customer"
			],
			[
				"re",
				"request\t(customer_view.py)"
			],
			[
				"Login",
				"LoginViewSet"
			],
			[
				"lo",
				"logout_customer\t(customer_view.py)"
			],
			[
				"login",
				"login_customer\t(customer_view.py)"
			],
			[
				"customer",
				"customer_view"
			],
			[
				"templ",
				"template_name"
			],
			[
				"Temp",
				"TemplateView"
			],
			[
				"test_customer_can_log",
				"test_customer_can_logout"
			],
			[
				"post",
				"postal_code"
			],
			[
				"Test",
				"TestCase"
			],
			[
				"jo",
				"joeyuser"
			],
			[
				"ma",
				"max_length"
			],
			[
				"Cu",
				"CustomerViewSet"
			],
			[
				"Custome",
				"CustomerViewSet\t(customer_view.py)"
			],
			[
				"vie",
				"views\t(customer_view.py)"
			],
			[
				"bang",
				"bangazon_webstore\t(customer_view.py)"
			],
			[
				"produt",
				"product_info"
			],
			[
				"conn",
				"connect\t(main.py)"
			],
			[
				"complete",
				"complete_order"
			],
			[
				"payment",
				"payment_options"
			],
			[
				"new",
				"new_user"
			],
			[
				"paym",
				"payment_type"
			],
			[
				"cu",
				"customer_name\t(customer.py)"
			],
			[
				"pay",
				"payment_type\t(payment_options.py)"
			],
			[
				"assert",
				"assertIsNotNone\t(TestCustomer.py)"
			],
			[
				"class",
				"classmethod\t(TestCustomer.py)"
			],
			[
				"joy",
				"joey_amex"
			],
			[
				"unit",
				"unittest"
			],
			[
				"schedul",
				"schedules"
			],
			[
				"time",
				"time_was_recorded"
			],
			[
				"get",
				"get_walk_times"
			],
			[
				"s",
				"scheduler"
			],
			[
				"com",
				"completed_models"
			],
			[
				"un",
				"unprinted_designs"
			],
			[
				"prin",
				"print_models"
			],
			[
				"comp",
				"completed_models"
			],
			[
				"user",
				"usernames"
			],
			[
				"gree",
				"greet_users"
			],
			[
				"art",
				"artist\t(albummodels.py)"
			],
			[
				"ge",
				"genremodels\t(songmodels.py)"
			],
			[
				"for",
				"format\t(albummodels.py)"
			],
			[
				"gen",
				"genremodels"
			],
			[
				"album",
				"albummodels"
			],
			[
				"Song",
				"SongViewSet\t(songviews.py)"
			],
			[
				"Mod",
				"ModelViewSet"
			],
			[
				"on",
				"on_delete=models.CASCADE"
			],
			[
				"For",
				"ForeignKey"
			],
			[
				"max",
				"max_length=55"
			],
			[
				"rout",
				"router"
			],
			[
				"Grou",
				"GroupSerializer"
			],
			[
				"ser",
				"serializer_class"
			],
			[
				"User",
				"UserSerializer"
			],
			[
				"view",
				"viewsets"
			],
			[
				"la",
				"last_name\t(formatted_name.py)"
			],
			[
				"first",
				"first_name\t(formatted_name.py)"
			],
			[
				"mus",
				"musician"
			],
			[
				"full",
				"full_name"
			],
			[
				"las",
				"last_name"
			],
			[
				"firs",
				"first_name"
			],
			[
				"pet",
				"pet_name"
			],
			[
				"an",
				"animal_type"
			],
			[
				"gre",
				"greet_user"
			],
			[
				"poll",
				"polling_active"
			],
			[
				"conf",
				"confirmed_users"
			],
			[
				"unc",
				"uncomfirmed_users"
			],
			[
				"True",
				"True\t(parrot.py)"
			],
			[
				"back",
				"background-color"
			],
			[
				"lang",
				"languages"
			],
			[
				"lan",
				"language"
			],
			[
				"fa",
				"favorite_languages"
			],
			[
				"to",
				"topping"
			],
			[
				"al",
				"alien"
			],
			[
				"Orde",
				"OrderHasProductsSerializer"
			],
			[
				"Bang",
				"BangOrderSerializer"
			],
			[
				"vi",
				"viewsets"
			],
			[
				"Pro",
				"ProductType"
			],
			[
				"li",
				"lightblue"
			],
			[
				"Qu",
				"QuestionAdmin"
			],
			[
				"E",
				"Employees"
			],
			[
				"Su",
				"SuperheroId"
			],
			[
				"Emp",
				"Employees"
			],
			[
				"Em",
				"Employees"
			],
			[
				"De",
				"Department"
			],
			[
				"de",
				"DepartmentId"
			],
			[
				"Cus",
				"Customer_has_payment_type"
			],
			[
				"Pay",
				"Payment_type"
			],
			[
				"Cust",
				"Customer"
			],
			[
				"C",
				"Customer"
			],
			[
				"Paym",
				"PaymentTypeId"
			],
			[
				"pro",
				"ProductTypeId"
			],
			[
				"D",
				"DepartmentId"
			],
			[
				"d",
				"DepartmentId"
			],
			[
				"f",
				"first_name"
			],
			[
				"S",
				"Sales"
			],
			[
				"su",
				"super"
			],
			[
				"add",
				"add_sales_team_member"
			],
			[
				"po",
				"policies"
			],
			[
				"N",
				"NW_Marketing"
			],
			[
				"Se",
				"SE_Sales"
			],
			[
				"Bat",
				"Batman"
			],
			[
				"F",
				"FROM"
			],
			[
				"T",
				"TEXT"
			],
			[
				"Po",
				"Power"
			],
			[
				"Pow",
				"PowerType"
			],
			[
				"Super",
				"SuperheroId"
			],
			[
				"Power",
				"PowerTypeId"
			],
			[
				"r",
				"resource_name"
			],
			[
				"se",
				"secondOperand"
			],
			[
				"cal",
				"calculator"
			],
			[
				"ca",
				"calculator"
			],
			[
				"spe",
				"species"
			],
			[
				"Depar",
				"Department"
			],
			[
				"sik",
				"Sidekick"
			],
			[
				"sid",
				"Sidekick"
			],
			[
				"e",
				"employees"
			],
			[
				"fi",
				"FirstTennessee"
			],
			[
				"_",
				"__str__"
			],
			[
				"em",
				"employee"
			],
			[
				"Fi",
				"FirstTennessee"
			],
			[
				"p",
				"print"
			],
			[
				"Sup",
				"Superhero"
			],
			[
				"pow",
				"power_to_remove"
			],
			[
				"def",
				"default_powers"
			],
			[
				"ran",
				"random_numbers"
			],
			[
				"no",
				"no_nickelback"
			],
			[
				"ro",
				"rocky_planets"
			],
			[
				"in",
				"insert"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pa",
		"selected_items":
		[
			[
				"pa",
				"Package Control: Disable Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"gr",
				"Grunt"
			],
			[
				"pac",
				"Package Control: List Packages"
			],
			[
				"grunt",
				"Grunt"
			],
			[
				"gru",
				"Grunt"
			],
			[
				"inst",
				"Package Control: Install Package"
			]
		],
		"width": 521.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/trent/ComicStore/src"
	],
	"file_history":
	[
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon_website/bangazon_website/bangazon_webstore/templates/bangazon_webstore/logout.html",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon_website/bangazon_website/bangazon_webstore/models/__init__.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon_website/bangazon_website/bangazon_webstore/urls.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon_website/bangazon_website/bangazon_website/urls.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/CLI/CLI.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/models/customer.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/tests/TestCustomer.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/models/complete_order.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/models/payment_options.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/trent.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/bangazon.db",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/.gitignore",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/CLI.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/main.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/populateDB.sql",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/tests/TestPaymentOptions.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/models/products.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/tests/TestCompleteOrder.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/tests/TestShoppingCart.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/models/shoppingcart.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/README.md",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/PULL_REQUEST_TEMPLATE.md",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-cli/ISSUE_TEMPLATE.md",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models/models.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models/albummodels.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/userserializers.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/songserializer.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/genreserializer.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/albumserializer.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/artistserializer.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/fixtures/songs.json",
		"/Users/trent/workspace/python/music_history_api/music_history_api/README.md",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/fixtures/genres.json",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/fixtures/artists.json",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/fixtures/albums.json",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/migrations/0002_auto_20170203_1609.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models/artistmodels.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models/songmodels.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models/genremodels.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models/__init__.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/.gitignore",
		"/Users/trent/workspace/python/music_history_api/.gitignore",
		"/Users/trent/workspace/python/music_history_api/music_history_api/music_history_api/urls.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/songviews.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/genreviews.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/userviews.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/__init__.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/__init__.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/albumviews.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/artistviews.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/views/views.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/serializers/serializers.py",
		"/Users/trent/workspace/python/music_history_api/music_history_api/quickstart/models",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/mountain_poll.py",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/pets.py",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/confirmed_users.py",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/pizza.py",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/counting.py",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/parrot.py",
		"/Users/trent/workspace/crashcourse/user_input_and_while_loops/cities.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-api/quickstart/urls.py",
		"/Users/trent/workspace/NSS/Back-End/groupprojects/bangazon-api/crashcourse.py",
		"/Users/trent/workspace/python/django_practice/mysite/mysite/urls.py",
		"/Users/trent/workspace/python/django_practice/mysite/mysite/settings.py",
		"/Users/trent/workspace/python/exercises/databases/superheroes/superhero.sql",
		"/Users/trent/workspace/python/orientation/bangazon/bangazon.sql",
		"/Users/trent/workspace/python/exercises/databases/superheroes/superhero.db-journal",
		"/Users/trent/workspace/python/exercises/databases/superheroes/superhero.db",
		"/Users/trent/workspace/python/exercises/dictionaries/stocks.py",
		"/Users/trent/workspace/python/exercises/sets/nickelback.py",
		"/Users/trent/workspace/python/exercises/testing/animals.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/superman.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/TestSuperman.py",
		"/Users/trent/workspace/python/exercises/testing/calculator.py",
		"/Users/trent/workspace/python/exercises/testing/TestAnimals.py",
		"/Users/trent/workspace/python/exercises/testing/TestCalculator.py",
		"/Users/trent/workspace/python/exercises/testing/TestDogs.py",
		"/Users/trent/workspace/python/orientation/bangazon/bangazon.py",
		"/Users/trent/workspace/python/exercises/classes/superhero.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/superhero.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/swimming.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/bulletproof.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/TestSuperhero.py",
		"/Users/trent/workspace/python/exercises/lists/planets.py",
		"/Users/trent/workspace/python/exercises/sets/cars.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/flight.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/sidekick.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/p.py",
		"/Users/trent/workspace/python/exercises/classes/employees.py",
		"/Users/trent/workspace/python/exercises/dictionaries/family_dict.py",
		"/Users/trent/workspace/python/exercises/lists/random_squared.py",
		"/Users/trent/workspace/python/exercises/classes/superheroesUnitTesting/running.py",
		"/Users/trent/workspace/python/hello.py",
		"/Users/trent/workspace/NSS/Front-End/capstones/IngredientFinderAngular/app/values/fb-getter.js",
		"/Users/trent/workspace/NSS/Front-End/capstones/IngredientFinderAngular/lib/Gruntfile.js",
		"/Users/trent/Library/Application Support/Sublime Text 3/Packages/Grunt/SublimeGrunt.sublime-settings",
		"/Users/trent/Library/Application Support/Sublime Text 3/Packages/User/SublimeGrunt.sublime-settings",
		"/Users/trent/workspace/NSS/Front-End/capstones/IngredientFinderAngular/app/controllers/NewLocationCtrl.js",
		"/Users/trent/workspace/NSS/Front-End/capstones/IngredientFinderAngular/app/factories/LocationsFactory.js",
		"/Users/trent/workspace/NSS/Front-End/capstones/IngredientFinderIonic/.gitignore",
		"/Users/trent/.zshrc",
		"/Users/trent/.zsh-update",
		"/Users/trent/.zsh_history",
		"/Users/trent/workspace/NSS/Front-End/capstones/IngredientFinderAngular/.zshrc",
		"/Users/trent/.oh-my-zsh/plugins/zsh-navigation-tools/README.md",
		"/Users/trent/.oh-my-zsh/plugins/zeus/README.md",
		"/Users/trent/.oh-my-zsh/plugins/z/README",
		"/Users/trent/.oh-my-zsh/plugins/thefuck/README.md"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"user",
			"login_",
			"account_info",
			"bangazon",
			"bangazon.db",
			"error",
			"bangazon.db",
			"raw_",
			"first_name",
			"last_name",
			"__last_name",
			"last_name",
			"customer_serializer",
			"a:",
			";\n",
			"DELETE FROM",
			"set",
			"DELETE FROM SuperheroPower;\n",
			"DELETE FROM",
			"CREATE TABLE `PowerType` (\n    `PowerTypeId`  INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,\n    `Name`  TEXT NOT NULL\n);",
			"SE_HR.add_resource(\"Legal\")\n",
			"class Sales(Department):\n    def __init__(self, name, dept_head, employees):\n        super().__init__(name, dept_head, employees)\n        self.field_team = {}",
			"addNewLocation",
			"NewLocationCtrl",
			"GMapCreds",
			"partials",
			"LP-ENABLE"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 160.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "ComicStore.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 212.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
